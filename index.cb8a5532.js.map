{"mappings":"AAAA,MAIMA,EAAkBC,GACf,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,GANyBC,EAMS,IANJC,EAMS,IALxCC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IADpB,IAACA,EAAKC,EAOpCI,YAAW,KACUH,KAAKE,SAAW,GAGjCP,EAAQ,CAAES,GAAIX,EAAYW,GAAIC,KAAMR,IAEpCD,EAAOH,EAAYW,GAAG,GAEvBP,EAAM,IAIPS,EAAa,EAACF,GAAEA,EAAEC,KAAEA,MACxBE,QAAQC,IAAI,eAAeJ,kBAAmBC,OAAU,EAGpDI,EAAWL,IACfG,QAAQG,KAAK,gCAAgCN,6BAA8B,EAG7EZ,EAAgB,CAAEY,GAAI,GAAIO,OAAQ,MAAOC,KAAKN,GAAYO,MAAMJ,GAEhEjB,EAAgB,CAAEY,GAAI,GAAIO,OAAQ,MAAOC,KAAKN,GAAYO,MAAMJ,GAEhEjB,EAAgB,CAAEY,GAAI,GAAIO,OAAQ,KAAMC,KAAKN,GAAYO,MAAMJ,GAE/DjB,EAAgB,CAAEY,GAAI,GAAIO,OAAQ,MAAOC,KAAKN,GAAYO,MAAMJ","sources":["src/js/task-3.js"],"sourcesContent":["const randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = transaction => {\n  return new Promise((resolve, reject) => {\n    const delay = randomIntegerFromInterval(200, 500);\n    setTimeout(() => {\n      const canProcess = Math.random() > 0.3;\n\n      if (canProcess) {\n        resolve({ id: transaction.id, time: delay });\n      } else {\n        reject(transaction.id);\n      }\n    }, delay);\n  });\n};\n\nconst logSuccess = ({ id, time }) => {\n  console.log(`Transaction ${id} processed in ${time} ms`);\n};\n\nconst logError = id => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);\n"],"names":["$c9c6b14627fe01cd$var$makeTransaction","transaction","Promise","resolve","reject","delay","min","max","Math","floor","random","setTimeout","id","time","$c9c6b14627fe01cd$var$logSuccess","console","log","$c9c6b14627fe01cd$var$logError","warn","amount","then","catch"],"version":3,"file":"index.cb8a5532.js.map"}